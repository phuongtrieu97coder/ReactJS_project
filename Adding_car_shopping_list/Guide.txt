+In this project I used ReactJS, AngularJS, javaScript, jQuery, Html, Css, PHP to get car data to add to a car shopping list

+User when enter this test1.php just see a form that have 2 input field and a +add button

+ Below input field is a text called "Your Car info is:"

+ I add some data to this form using jQuery, javaScript, and PHP

 <form id="form1" title="form1" name="form1" data-form1="form1-shopping-list-data"
     action="<?php echo htmlspecialchars($_SERVER["PHP_SELF"])?>" method="post" target="_self"
     enctype="multipart/form-data" ng-app="form1_app" ng-controller="form1_app_controller"
     style="width:800px;font-size:25px;border:5px double yellowgreen;
     position:relative;left:300px;padding-right:120px;"
     >

    


     <div id="form1_1"></div>

      <div id="form1_2">
      <span>
                     <b>Your Car info is: <br>
              <i id='result' ng-model="car_result_model">
                     {{add_item2_input_model +','+add_item_input_model}}

              </i></b>
     </span><br/>
     
        
         <div id="form1_2_car_info_block"> </div>

         <div id="form1_2_car_order_after_being_added" 
         >
                  <b>Your Car list:</b><br>
                  <table id="car_order_after_being_added_table_list" 
                  >
                        
                  </table>

                  <div ng-repeat="item in car_storage" 
                  style="position:relative;top:0;border:5px solid green;margin-bottom:20px;padding:10px;">
                         {{item}}
                                          <button id="remove_button" title="remove_button" name="remove_button"
                                          type="button" data-remove-button="remove button data" 
                                          class="remove_button btn w3-transparent
                                          w3-hover-red w3-hover-text-white" ng-click="remove_car_added_func($index)"
                                          style="position:absolute;top:0;right:0;bottom:0;color:red;
                                          font-size:30px">&times;</button>
                  </div>
                  
        </div>
   

        <span id="car_item_storage_error_message" 
        class="text-danger">{{car_adding_item_error_message}}</span>




              <button class="add_item_butt btn text-white w3-green
                 w3-hover-aqua w3-hover-text-white"
                 id="add_item_butt" title="add_item button" name="add_item_button"
                type="button"  data-add_item-butt="shopping item add_item button data"
                
                ng-click="adding_car_item_func()"
                style="position:absolute;right:0;top:0;bottom:0;font-size:25px;padding:10px 20px;"
                ><i class="fa fa-plus"></i> ADD</button>
      </div>

     


    

     </form>
    

<script>

document.getElementById("form1").prop_data1_obj={
       prop1:"val1",
       prop2:"val2"
} 
document.querySelectorAll("#form1")[0].dataset.Form1Dataset1 = "form1-dataset-1-shopping-list";






var jq = $.noConflict();
jq(document).ready(function($){

       var form1_datablock_obj = {
              data1:"val1",
              data2:"val2"
       }
       $("#form1")
       .data(form1_datablock_obj)
       .on("Custom.Form1_Namespace1",
           {
                  form1_namespace_data1:"data_namespace1",
                  form1_namespace_data2:"data_namespace2"
           },
           function(event){
                  console.log(event.namespace + "\n");
                  console.log(event.data.form1_namespace_data1+ "\n");
                  console.log(event.data.form1_namespace_data2+ "\n");
           }
       ).contextmenu(function(){
              $(this).trigger("Custom.Form1_Namespace1");
       })
       ;

       $("test1,test2,test3").hide();



+If user fill out the the first input field the car model name that match  lamborghini aventador,  lamborghini huracan, or  lamborghini veneno, 
then the test1.php page will take data from test2.php and display the correct block that has image and title of the exact same car


---syntax from jQuery to make the block contain data appear or disappear



 .keyup(function(){
             
              


              if($("#add_item_field").val().toLowerCase().includes("lamborghini aventador")){
              $("test1").fadeIn(2000);
              $("test2,test3").hide();
              }else if($("#add_item_field").val().toLowerCase().includes("lamborghini huracan")){
                     $("test2").fadeIn(2000);
                     $("test1,test3").hide();
              }else if($("#add_item_field").val().toLowerCase().includes("lamborghini veneno")){
                     $("test3").fadeIn(2000);
                     $("test2,test1").hide();
              }else{
                     console.log("");
              }
       });
       
       
       
       


---syntax from ReactJS


    function func2(){
               return (

                     <div>
                      <test1 data1="car_item.car_list1[0]"></test1>
                      <test2 data1="car_item.car_list1[3]"></test2>
                      <test3 data1="car_item.car_list1[5]"></test3>
                      </div>
               )
        }

        ReactDOM.render(func2(),document.getElementById("form1_2_car_info_block"));
        
        
       
  --- .directive() method syntax from AngularJS      
       
       shopping_app.directive("test1",function(){
       return {
              restrict:"E",
              scope:{
                     data1:"="
              },
              templateUrl:"test2.php"
       }
});

shopping_app.directive("test2",function(){
       return {
              restrict:"E",
              scope:{
                     data1:"="
              },
              templateUrl:"test2.php"
       }
});

shopping_app.directive("test3",function(){
       return {
              restrict:"E",
              scope:{
                     data1:"="
              },
              templateUrl:"test2.php"
       }
});



        

+If user click +add button, new car model name will be added into this form list. I use AngularJS in this case to handle adding item and remove item

  $scope.car_storage = [];
       $scope.car_adding_item_error_message = "";
       $scope.adding_car_item_func = function(){
              if($scope.car_storage.indexOf(document.getElementById("add_item_field").value) == -1){
                     $scope.car_storage.push(document.getElementById("add_item_field").value);
              }else{
                     $scope.car_adding_item_error_message = "Sorry, your car already exists in this list!!!";
              }
       }
       $scope.remove_car_added_func = function(z){
              $scope.car_storage.splice(z,1);
       }
       
       
       

+User can not add the same car model into this form list

+User can remove a car that have been added into this list by click the x button that placed on the right of a block contain a new car added into this list

+I used some syntax to convert each first letter to uppercase letter that user input into the input field if they separate each word with a whitespace

 $("#add_item_field")
       .change(function(){
              var add_item_field_val_arr = $(this).val().split(" ");
              var txt = "";
              for(let i = 0; i<add_item_field_val_arr.length;i++){
                     txt += add_item_field_val_arr[i].charAt(0).toUpperCase()+add_item_field_val_arr[i].slice(1)+" ";
                     $(this).val(txt);
              }
       })
       
       
       
       


+I placed syntax of two input field into ReactJS syntax block

 function func1(){
             
               return (

              <div>
                     <input className="add_item_field text-primary"
                 id="add_item_field" title="add item input field" name="add_item_field"
                type="text"  data-add-item-field="shopping item add item input field data"
                style={{width:"100%"}}
                placeholder="Enter your car model..."
                ng-model="add_item_input_model"
              />


            <input className="add_item2_field text-primary
                 "
                 id="add_item2_field" title="add item2 input field" name="add_item2_field"
                type="text"  data-add-item2-field="shopping item add item2 input field data"
                style={{width:"100%"}}
                placeholder="Enter your car brand..."
                ng-model="add_item2_input_model"
              />

             

              </div>
               );
                
              
              
        }
   ReactDOM.render(func1(),document.getElementById("form1_1"));
   
   
   
   

+I get data from a file car_list.json using AngularJS syntax inside test1.php

shopping_app.controller("form1_app_controller",function($scope,$http){
       $scope.code1='4556797897898798797935134634556';
       $http({
              method:"POST",
              url:"car_list.json"
       }).then(
              function success(response){
                     $scope.car_item = response.data;
              },
              function erro(response){
                     $scope.error_message = "Sorry, there was an error happening when loading your data!!!";
                     console.log(response.status);
                     console.log(response.statusText);
              }
       );
       
       
       
      ---------- syntax in  car_list.json ------------
      
      
      
     {
    "car_list1": [
        {
                "image":"image/car/lamborghini_aventador1.jpg",
                "title":"Lamborghini_aventador1"
         },
         {
                "image":"image/car/lamborghini_aventador2.jpg",
                "title":"Lamborghini_aventador2"
         },
         {
                "image":"image/car/lamborghini_aventador3.jpg",
                "title":"Lamborghini_aventador3"
         },
         {
                "image":"image/car/lamborghini_huracan2.jpg",
                "title":"Lamborghini_huracan2"
         },
         {
                "image":"image/car/lamborghini_veneno.jpg",
                "title":"Lamborghini_veneno"
         },
         {
                "image":"image/car/lamborghini_veneno2.jpg",
                "title":"Lamborghini_veneno2"
         }
     ]
}




       

+Notice that because some element being made by ReactJS doesn't appear in the test1.php when working with VS Code.
I have to use JQuery for selector, not javaScript

+Notice that I meet some error like below, yet this program still working properly

babel.min.js:13 
        
       You are using the in-browser Babel transformer. Be sure to precompile your scripts for production - https://babeljs.io/docs/setup/
(anonymous) @ babel.min.js:13
K0 @ babel.min.js:13
V0 @ babel.min.js:13
react-dom.development.js:61 
        
       Warning: The tag <test1> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.
    at test1
    at div
printWarning @ react-dom.development.js:61
error @ react-dom.development.js:37
createElement @ react-dom.development.js:9057
createInstance @ react-dom.development.js:10222
completeWork @ react-dom.development.js:19494
completeUnitOfWork @ react-dom.development.js:22845
performUnitOfWork @ react-dom.development.js:22817
workLoopSync @ react-dom.development.js:22737
renderRootSync @ react-dom.development.js:22700
performSyncWorkOnRoot @ react-dom.development.js:22323
scheduleUpdateOnFiber @ react-dom.development.js:21911
updateContainer @ react-dom.development.js:25512
(anonymous) @ react-dom.development.js:26051
unbatchedUpdates @ react-dom.development.js:22461
legacyRenderSubtreeIntoContainer @ react-dom.development.js:26050
render @ react-dom.development.js:26133
(anonymous) @ Inline Babel script:55
P0 @ babel.min.js:13
n @ babel.min.js:13
_0 @ babel.min.js:13
(anonymous) @ babel.min.js:13
K0 @ babel.min.js:13
V0 @ babel.min.js:13
react-dom.development.js:61 
        
       Warning: The tag <test2> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.
    at test2
    at div
printWarning @ react-dom.development.js:61
error @ react-dom.development.js:37
createElement @ react-dom.development.js:9057
createInstance @ react-dom.development.js:10222
completeWork @ react-dom.development.js:19494
completeUnitOfWork @ react-dom.development.js:22845
performUnitOfWork @ react-dom.development.js:22817
workLoopSync @ react-dom.development.js:22737
renderRootSync @ react-dom.development.js:22700
performSyncWorkOnRoot @ react-dom.development.js:22323
scheduleUpdateOnFiber @ react-dom.development.js:21911
updateContainer @ react-dom.development.js:25512
(anonymous) @ react-dom.development.js:26051
unbatchedUpdates @ react-dom.development.js:22461
legacyRenderSubtreeIntoContainer @ react-dom.development.js:26050
render @ react-dom.development.js:26133
(anonymous) @ Inline Babel script:55
P0 @ babel.min.js:13
n @ babel.min.js:13
_0 @ babel.min.js:13
(anonymous) @ babel.min.js:13
K0 @ babel.min.js:13
V0 @ babel.min.js:13
react-dom.development.js:61 
        
       Warning: The tag <test3> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.
    at test3
    at div
printWarning @ react-dom.development.js:61
error @ react-dom.development.js:37
createElement @ react-dom.development.js:9057
createInstance @ react-dom.development.js:10222
completeWork @ react-dom.development.js:19494
completeUnitOfWork @ react-dom.development.js:22845
performUnitOfWork @ react-dom.development.js:22817
workLoopSync @ react-dom.development.js:22737
renderRootSync @ react-dom.development.js:22700
performSyncWorkOnRoot @ react-dom.development.js:22323
scheduleUpdateOnFiber @ react-dom.development.js:21911
updateContainer @ react-dom.development.js:25512
(anonymous) @ react-dom.development.js:26051
unbatchedUpdates @ react-dom.development.js:22461
legacyRenderSubtreeIntoContainer @ react-dom.development.js:26050
render @ react-dom.development.js:26133
(anonymous) @ Inline Babel script:55
P0 @ babel.min.js:13
n @ babel.min.js:13
_0 @ babel.min.js:13
(anonymous) @ babel.min.js:13
K0 @ babel.min.js:13
V0 @ babel.min.js:13
VM654 angular.min.js:348 WARNING: Tried to load AngularJS more than once.
VM666 angular.min.js:348 WARNING: Tried to load AngularJS more than once.
angular.js:36440 WARNING: Tried to load AngularJS more than once.
21test1.php:231 


